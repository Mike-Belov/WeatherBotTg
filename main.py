from selenium import webdriver
import time
from selenium_stealth import stealth
from bs4 import BeautifulSoup
import telebot
from telebot import types
from datetime import datetime
from threading import Thread
import schedule

#–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ start
def Time(message): 
    print("–¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    while True:
        Message(message)
        time.sleep(10800)

#–ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
def init_webdriver():
    driver = webdriver.Chrome() 
    stealth(driver, 
            platform="Win32",
            vendor="Google Inc.",
            webgl_vendor="Intel Inc.",
            renderer="Intel Iris OpenGL Engine")
    return driver

#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def keyboard():
    global day1, day2, day3

    #keyboard 
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    btnToday = types.KeyboardButton(f"–ü–û–ì–û–î–ê –°–ï–ì–û–î–ù–Ø")
    btnInformation = types.KeyboardButton("üìÉ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    btnYesteday = types.KeyboardButton(f"–ü–û–ì–û–î–ê –ó–ê–í–¢–†–ê")
    
    #–î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    year = int(datetime.now().strftime('%Y'))
    month = int(datetime.now().strftime('%m'))
    
    endmonth = 5
    newmoth = 0
    
    try:
        yesteday = datetime(year, month, int(datetime.now().strftime('%d'))+1)
    except:
        newmoth += 1
    try:
        day1 = datetime(year, month, int(datetime.now().strftime('%d'))+2)
    except:
        endmonth = endmonth-1
        newmoth += 1
    try:
        day2 = datetime(year, month, int(datetime.now().strftime('%d'))+3)
    except:
        endmonth = endmonth-1 
        newmoth += 1 
    try:
        day3 = datetime(year, month, int(datetime.now().strftime('%d'))+4)
    except:
        endmonth = endmonth-1  
        newmoth += 1
    
    markup.add(btnToday, btnYesteday, btnInformation)        
    
    #—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    for i in range(2, endmonth):
        try:
            daytoday = int(datetime.now().strftime('%d'))+i
            day = datetime(year, month, daytoday)
            day = day.weekday()
        
            btn = types.KeyboardButton(f"{Weekday(day)}")       
            markup.add(btn) 
        except:
            print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π")    
    
    if month+1 > 12:  
        nextmonth = 1
        year = int(datetime.now().strftime('%Y'))+1
    else:
        nextmonth = month+1
    
    if newmoth > 0:
        if newmoth == 4:
            day1 = datetime(year, nextmonth, 2)
            day2 = datetime(year, nextmonth, 3)
            day3 = datetime(year, nextmonth, 4)
         
            for i in range(1, 4):
                try:
                   daytoday = i+1
                   day = datetime(year, nextmonth, daytoday)
                   day = day.weekday()
    
                   weatherspeed = 3
                
                   btn = types.KeyboardButton(f"({Weekday(day)}")     
                   weatherspeed +=1  
                   markup.add(btn) 
                except:
                   print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π") 
        elif newmoth == 3:
            day1 = datetime(year, nextmonth+1, 1)
            day2 = datetime(year, nextmonth+1, 2)
            day3 = datetime(year, nextmonth+1, 3)
    
            for i in range(1, 4):
                try:
                   daytoday = i
                   day = datetime(year, nextmonth, daytoday)
                   day = day.weekday()
    
                   weatherspeed = 3
                
                   btn = types.KeyboardButton(f"{Weekday(day)}")     
                   weatherspeed += 1  
                   markup.add(btn) 
                except:
                   print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π") 
        elif newmoth == 2:
            day2 = datetime(year, nextmonth, 1)
            day3 = datetime(year, nextmonth, 2)
    
            for i in range(1, 3):
                try:
                   daytoday = i
                   day = datetime(year, nextmonth, daytoday)
                   day = day.weekday()
    
                   weatherspeed = 4
                
                   btn = types.KeyboardButton(f"{Weekday(day)}")  
                   weatherspeed +=1     
                   markup.add(btn) 
                except:
                   print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π") 
        elif newmoth == 1:
            day3 = datetime(year, nextmonth, 1) 
            try:
               daytoday = 1
               day = datetime(year, nextmonth, daytoday)
               day = day.weekday()
            
               btn = types.KeyboardButton(f"{Weekday(day)}")       
               markup.add(btn) 
            except:
               print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π")      
    return(markup)              

def twokeyboard(message):
    new_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    new_keyboard.add('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', "–ù–∞–∑–∞–¥")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤–ª—è—è –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ?', reply_markup=new_keyboard) 

def Message(message):
    bot.send_message(message.chat.id, temperaturahour())

def KeyboardMessage(message, markup):
    bot.send_message(message.chat.id, "", reply_markup=markup)

#–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ 00:01 (3 –ø–æ—Ç–æ–∫)
def KeyboardTime(message):
    if schedule.every().day.at("00:01").do():
        markup=keyboard()
        KeyboardMessage(message, markup)
    while True:
        schedule.run_pending()
        time.sleep(1)

#–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å(–∫–∞–∂–¥—ã–Ω–µ 3 —á–∞—Å–∞)
def temperaturahour():
    global soup
    temperaturatoday=soup.find("span", class_="AppFactTemperature_sign__1MeN4 AppFactTemperature_attr__8pcxc").text
    temperaturatoday1 =soup.find("span", class_="AppFactTemperature_value__2qhsG").text
    weather =soup.find("p", class_="AppFact_warning__8kUUn").text
    pogoda = '–°–µ–π—á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {}'.format(temperaturatoday)+"{}".format(temperaturatoday1)+"\n{}".format(weather)
    return pogoda

#–ü–∞—Ä—Å–∏–º –ø–æ–≥–æ–¥—É
def parsingpogoda(numberday):
    global soup
    day=soup.find_all("h3", style="grid-area:day-title")[numberday].text
    temperaturamoning = soup.find_all("div", style="grid-area:m-temp")[numberday].text
    temperaturaday = soup.find_all("div", style="grid-area:d-temp")[numberday].text
    temperaturaevening = soup.find_all("div", style="grid-area:d-temp")[numberday].text
    temperaturanight = soup.find_all("div", style="grid-area:n-temp")[numberday].text
    
    pogodamoning = soup.find_all("div", style="grid-area:m-text")[numberday].text
    pogodaday = soup.find_all("div", style="grid-area:d-text")[numberday].text
    pogodaevening = soup.find_all("div", style="grid-area:e-text")[numberday].text
    pogodanight = soup.find_all("div", style="grid-area:n-text")[numberday].text

    pogoda = ("{}".format(day) +"\n–£—Ç—Ä–æ–º {}".format(temperaturamoning)+" ({}".format(pogodamoning)+")\n–î–Ω–µ–º {}".format(temperaturaday)+
    " ({}".format(pogodaday)+")\n–í–µ—á–µ—Ä–æ–º {}".format(temperaturaevening)+" ({}".format(pogodaevening)+")\n–ù–æ—á—å—é {}".format(temperaturanight)+" ({}".format(pogodanight)+")")
    return pogoda

#–ü–æ–¥—Ä–æ–±–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–∫
def detailedparsink():
    global soup, numberday
    
    windmoning = soup.find_all("div", style="grid-area:m-wind")[numberday].text
    windday = soup.find_all("div", style="grid-area:d-wind")[numberday].text
    windevening = soup.find_all("div", style="grid-area:e-wind")[numberday].text
    windnight = soup.find_all("div", style="grid-area:n-wind")[numberday].text

    directionmoning = soup.find_all("div", style="grid-area:m-dir")[numberday].text
    directionday = soup.find_all("div", style="grid-area:d-dir")[numberday].text
    directionevening = soup.find_all("div", style="grid-area:e-dir")[numberday].text
    directionnight = soup.find_all("div", style="grid-area:n-dir")[numberday].text

    humiditymoning = soup.find_all("div", style="grid-area:m-hum")[numberday].text
    humidityday = soup.find_all("div", style="grid-area:d-hum")[numberday].text   
    humidityevening = soup.find_all("div", style="grid-area:e-hum")[numberday].text
    humiditynight = soup.find_all("div", style="grid-area:n-hum")[numberday].text

    pressuremoning = soup.find_all("div", style="grid-area:m-press")[numberday].text
    pressureday = soup.find_all("div", style="grid-area:d-press")[numberday].text
    pressureevening = soup.find_all("div", style="grid-area:e-press")[numberday].text
    pressurenight = soup.find_all("div", style="grid-area:n-press")[numberday].text

    pogoda = (f"–í–µ—Ç–µ—Ä –º/—Å \t –í–ª–∞–∂–Ω–æ—Å—Ç—å \t –î–∞–≤–ª–µ–Ω–∏–µ –º–º.—Ä—Ç.—Å—Ç\n–£—Ç—Ä–æ–º \t\t{windmoning} \t{directionmoning} \t\t\t\t{humiditymoning} \t\t\t\t{pressuremoning}"+
    f"\n–î–Ω–µ–º \t\t{windday} \t{directionday} \t\t\t\t{humidityday} \t\t\t\t{pressureday}"+
    f"\n–í–µ—á–µ—Ä–æ–º \t\t{windevening} \t{directionevening} \t\t\t\t{humidityevening} \t\t\t\t{pressureevening}"+
    f"\n–ù–æ—á—å—é \t\t{windnight} \t{directionnight} \t\t\t\t{humiditynight} \t\t\t\t{pressurenight}") 
    return pogoda

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
def error(message):
    print("–û—à–∏–±–∫–∞")
    bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—èüò¢! \n–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ç—Ä—É–¥–∏—Ç—å—Å—è")

#–í—ã—è—Å–Ω—è–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
def Weekday(numberweekday):
    if numberweekday == 0:
        day = "–ü–û–ì–û–î–ê –í –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö"
    elif numberweekday == 1:
        day = "–ü–û–ì–û–î–ê –í–û –í–¢–û–†–ù–ò–ö"
    elif numberweekday == 2:
        day = "–ü–û–ì–û–î–ê –í –°–†–ï–î–£"
    elif numberweekday == 3:
        day = "–ü–û–ì–û–î–ê –í –ß–ï–¢–í–ï–†–ì"
    elif numberweekday == 4:
        day = "–ü–û–ì–û–î–ê –í –ü–Ø–¢–ù–ò–¶–£"
    elif numberweekday == 5:
        day = "–ü–û–ì–û–î–ê –í –°–£–ë–ë–û–¢–£" 
    elif numberweekday == 6:
        day = "–ü–û–ì–û–î–ê –í –í–û–°–ö–†–ï–°–ï–ù–¨–ï"    
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (def Weekday))")                       
       
    return day      

url = "https://yandex.ru/pogoda/ru"    
driver = init_webdriver()

#–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –¢–ì
TOKEN = "8305337492:AAFZF9M5NZndGooGBp44_9reT9uKXcBjf38"
bot = telebot.TeleBot(TOKEN)

day1= 0
day2 = 0
day3 = 0
numberday = 0

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")  

driver.get(url)
soup = BeautifulSoup(driver.page_source, "html.parser")    

#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–¥
@bot.message_handler(commands=['start'])
def Hello(message):
    markup=keyboard()
    if message.text == '/start':
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}ü§™. –ú–µ–Ω—è –∑–æ–≤—É—Ç {1.first_name}. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ü–û–ì–û–î–ê, –≤—ã–±—Ä–∞–≤ –¥–µ–Ω—å".
                     format(message.from_user, bot.get_me()), reply_markup=markup)
        #–≤—Ç–æ—Ä–æ–π –ø–æ—Ç–æ–∫
        th2 = Thread(target=Time(message))
        th2.start()
        #—Ç—Ä–µ—Ç–∏–π –ø–æ—Ç–æ–∫
        th3 = Thread(target=KeyboardTime(message))
        th3.start()
    elif message.text == "–ù–∞–∑–∞–¥":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –µ—â–µ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –¥–µ–Ω—å", reply_markup=markup)    
    
@bot.message_handler(content_types=['text'])
def Weather(message):
    global numberday
    markup = keyboard()
    if message.text == "–ü–û–ì–û–î–ê –°–ï–ì–û–î–ù–Ø":
        bot.send_message(message.chat.id, parsingpogoda(0))
        numberday = 0
        twokeyboard(message)

    elif message.text == "üìÉ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        bot.send_message(message.chat.id, "Bot —Å–æ–∑–¥–∞–Ω –≤ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö. –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±–µ—Ä–µ—Ç—Å—è —Å —Å–∞–π—Ç–∞ " + 
                         f"https://yandex.ru/pogoda/ . –¢–µ–ª–µ–≥—Ä–∞–º–º  bot —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º. –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub " + 
                         f"https://github.com/Mike-Belov/WeatherBotTg. –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º @MikiBelov", reply_markup=markup)         
        
    elif message.text == "–ü–û–ì–û–î–ê –ó–ê–í–¢–†–ê":
        bot.send_message(message.chat.id,parsingpogoda(1))
        numberday = 1
        twokeyboard(message)
    elif message.text == f"{Weekday(day1.weekday())}":
        bot.send_message(message.chat.id,parsingpogoda(2))
        numberday = 2
        twokeyboard(message)

    elif message.text == f"{Weekday(day2.weekday())}":
        bot.send_message(message.chat.id,parsingpogoda(3))
        numberday = 3
        twokeyboard(message)
    elif message.text == f"{Weekday(day3.weekday())}":        
        bot.send_message(message.chat.id,parsingpogoda(4))
        numberday = 4
        twokeyboard(message)

    elif message.text == "–ù–∞–∑–∞–¥":
        Hello(message)

    elif message.text == "–ü–æ–¥—Ä–æ–±–Ω–µ–µ":
        bot.send_message(message.chat.id, detailedparsink())
        Hello(message)     

    else:
        bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—Åüò©. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ. –í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")     


#–¶–∏–∫–ª, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª—Å—è 
while True:
    try:
        bot.polling(none_stop=True,timeout=5)
    except Exception as e:
        print(e)