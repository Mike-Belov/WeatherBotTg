from selenium import webdriver
import time
from selenium_stealth import stealth
from bs4 import BeautifulSoup
import telebot
from telebot import types
from datetime import datetime
from threading import Thread
import schedule

#–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞–∂–¥—ã–µ —á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
def Time(message): 
    schedule.every().hour.at(2).do(message)
    print("–¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    message(message)
    countert = 0
    while True:
        countert +=1
        print(countert)
        schedule.run_pending()
        time.sleep(1)

#–ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
def init_webdriver():
    driver = webdriver.Chrome() 
    stealth(driver, 
            platform="Win32",
            vendor="Google Inc.",
            webgl_vendor="Intel Inc.",
            renderer="Intel Iris OpenGL Engine")
    return driver

def message(message):
    bot.send_message(message.chat.id, temperaturatwohour())

def temperaturatwohour():
    global soup
    temperaturatoday=soup.find("span", class_="AppFactTemperature_sign__1MeN4 AppFactTemperature_attr__8pcxc").text
    temperaturatoday1 =soup.find("span", class_="AppFactTemperature_value__2qhsG").text
    pogoda = '–°–µ–π—á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {}'.format(temperaturatoday)
    pogoda+=temperaturatoday1
    return pogoda

def parsingpogoda(numberday):
    global soup
    day=soup.find_all("h3", style="grid-area:day-title")[numberday].text
    temperaturamoning = soup.find_all("div", style="grid-area:m-temp")[numberday].text
    temperaturaday = soup.find_all("div", style="grid-area:d-temp")[numberday].text
    temperaturaevening = soup.find_all("div", style="grid-area:d-temp")[numberday].text
    temperaturanight = soup.find_all("div", style="grid-area:n-temp")[numberday].text
    
    pogodamoning = soup.find_all("div", style="grid-area:m-text")[numberday].text
    pogodaday = soup.find_all("div", style="grid-area:d-text")[numberday].text
    pogodaevening = soup.find_all("div", style="grid-area:e-text")[numberday].text
    pogodanight = soup.find_all("div", style="grid-area:n-text")[numberday].text

    pogoda = "{}".format(day) +"\n–£—Ç—Ä–æ–º {}".format(temperaturamoning)+" ({}".format(pogodamoning)+")\n–î–Ω–µ–º {}".format(temperaturaday)+" ({}".format(pogodaday)+")\n–í–µ—á–µ—Ä–æ–º {}".format(temperaturaevening)+" ({}".format(pogodaevening)+")\n–ù–æ—á—å—é {}".format(temperaturanight)+" ({}".format(pogodanight)+")" 
    return pogoda

def error(message):
    print("–û—à–∏–±–∫–∞")
    bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—èüò¢! \n–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ç—Ä—É–¥–∏—Ç—å—Å—è")

def Weekday(numberweekday):
    if numberweekday == 0:
        day = "–ü–û–ì–û–î–ê –í –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö"
    elif numberweekday == 1:
        day = "–ü–û–ì–û–î–ê –í–û –í–¢–û–†–ù–ò–ö"
    elif numberweekday == 2:
        day = "–ü–û–ì–û–î–ê –í –°–†–ï–î–£"
    elif numberweekday == 3:
        day = "–ü–û–ì–û–î–ê –í –ß–ï–¢–í–ï–†–ì"
    elif numberweekday == 4:
        day = "–ü–û–ì–û–î–ê –í –ü–Ø–¢–ù–ò–¶–£"
    elif numberweekday == 5:
        day = "–ü–û–ì–û–î–ê –í –°–£–ë–ë–û–¢–£" 
    elif numberweekday == 6:
        day = "–ü–û–ì–û–î–ê –í –í–û–°–ö–†–ï–°–ï–ù–¨–ï"    
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (def Weekday))")                       
       
    return day      

url = "https://yandex.ru/pogoda/ru"    
driver = init_webdriver()

#–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –¢–ì
TOKEN = "8305337492:AAFZF9M5NZndGooGBp44_9reT9uKXcBjf38"
bot = telebot.TeleBot(TOKEN)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")  

driver.get(url)
soup = BeautifulSoup(driver.page_source, "html.parser")

#keyboard 
markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
btnToday = types.KeyboardButton(f"–ü–û–ì–û–î–ê –°–ï–ì–û–î–ù–Ø")
btnInformation = types.KeyboardButton("üìÉ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
btnYesteday = types.KeyboardButton(f"–ü–û–ì–û–î–ê –ó–ê–í–¢–†–ê")

#–î–Ω–∏ –Ω–µ–¥–µ–ª–∏
year = int(datetime.now().strftime('%Y'))
month = int(datetime.now().strftime('%m'))

endmonth = 5
newmoth = 0

try:
    yesteday = datetime(year, month, int(datetime.now().strftime('%d'))+1)
except:
    newmoth += 1
try:
    day1 = datetime(year, month, int(datetime.now().strftime('%d'))+2)
except:
    endmonth = endmonth-1
    newmoth += 1
try:
    day2 = datetime(year, month, int(datetime.now().strftime('%d'))+3)
except:
    endmonth = endmonth-1 
    newmoth += 1 
try:
    day3 = datetime(year, month, int(datetime.now().strftime('%d'))+4)
except:
    endmonth = endmonth-1  
    newmoth += 1

markup.add(btnToday, btnYesteday, btnInformation)        

#—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
for i in range(2, endmonth):
    try:
        daytoday = int(datetime.now().strftime('%d'))+i
        day = datetime(year, month, daytoday)
        day = day.weekday()
    
        btn = types.KeyboardButton(f"{Weekday(day)}")       
        markup.add(btn) 
    except:
        print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π")    

if month+1 > 12:  
    nextmonth = 1
    year = int(datetime.now().strftime('%Y'))+1
else:
    nextmonth = month+1

if newmoth > 0:
    if newmoth == 4:
        day1 = datetime(year, nextmonth, 2)
        day2 = datetime(year, nextmonth, 3)
        day3 = datetime(year, nextmonth, 4)
     
        for i in range(1, 4):
            try:
               daytoday = i+1
               day = datetime(year, nextmonth, daytoday)
               day = day.weekday()

               weatherspeed = 3
            
               btn = types.KeyboardButton(f"({Weekday(day)}")     
               weatherspeed +=1  
               markup.add(btn) 
            except:
               print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π") 
    elif newmoth == 3:
        day1 = datetime(year, nextmonth+1, 1)
        day2 = datetime(year, nextmonth+1, 2)
        day3 = datetime(year, nextmonth+1, 3)

        for i in range(1, 4):
            try:
               daytoday = i
               day = datetime(year, nextmonth, daytoday)
               day = day.weekday()

               weatherspeed = 3
            
               btn = types.KeyboardButton(f"{Weekday(day)}")     
               weatherspeed += 1  
               markup.add(btn) 
            except:
               print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π") 
    elif newmoth == 2:
        day2 = datetime(year, nextmonth, 1)
        day3 = datetime(year, nextmonth, 2)

        for i in range(1, 3):
            try:
               daytoday = i
               day = datetime(year, nextmonth, daytoday)
               day = day.weekday()

               weatherspeed = 4
            
               btn = types.KeyboardButton(f"{Weekday(day)}")  
               weatherspeed +=1     
               markup.add(btn) 
            except:
               print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π") 
    elif newmoth == 1:
        day3 = datetime(year, nextmonth, 1) 
        try:
           daytoday = 1
           day = datetime(year, nextmonth, daytoday)
           day = day.weekday()
        
           btn = types.KeyboardButton(f"{Weekday(day)}")       
           markup.add(btn) 
        except:
           print("–ü–æ–≥–æ–¥–∞ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π")         
    
#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–¥
@bot.message_handler(commands=['start'])
def Hello(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}ü§™. –ú–µ–Ω—è –∑–æ–≤—É—Ç {1.first_name}. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ü–û–ì–û–î–ê, –≤—ã–±—Ä–∞–≤ –¥–µ–Ω—å".
                     format(message.from_user, bot.get_me()), reply_markup=markup)
    #–≤—Ç–æ—Ä–æ–π –ø–æ—Ç–æ–∫
    #th = Thread(target=Time(message))
    #th.start()
    
@bot.message_handler(content_types=['text'])
def Weather(message):
    if message.text == f"–ü–û–ì–û–î–ê –°–ï–ì–û–î–ù–Ø":
        bot.send_message(message.chat.id, parsingpogoda(0))

    elif message.text == "üìÉ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        bot.send_message(message.chat.id, "Bot —Å–æ–∑–¥–∞–Ω –≤ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö. –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±–µ—Ä–µ—Ç—Å—è —Å —Å–∞–π—Ç–∞ " + 
                         f"https://yandex.ru/pogoda/ . –¢–µ–ª–µ–≥—Ä–∞–º–º  bot —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º. –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub " + 
                         f"https://github.com/Mike-Belov/TelegramWeather. –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º @MikiBelov")         
        
    elif message.text == f"–ü–û–ì–û–î–ê –ó–ê–í–¢–†–ê":
        bot.send_message(message.chat.id,parsingpogoda(1))
    elif message.text == f"{Weekday(day1.weekday())}":
        bot.send_message(message.chat.id,parsingpogoda(2))

    elif message.text == f"{Weekday(day2.weekday())}":
        bot.send_message(message.chat.id,parsingpogoda(3))
    elif message.text == f"{Weekday(day3.weekday())}":        
       bot.send_message(message.chat.id,parsingpogoda(4))
    else:
        bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—Åüò©. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ")     


while True:
    try:
        bot.polling(none_stop=True,timeout=5)
    except Exception as e:

        print(e)
